class User < ApplicationRecord
  ######################################################################################################
  # Using a separate class:
  ######################################################################################################
  autopopulates :name, :email, with: ->(user) { UserApiClient.fetch(user) }
  # TODO: Add `mapping` option in case result from `with` doesn't have the exact same attributes as this model
  ######################################################################################################


  ######################################################################################################
  # Using a lambda that populates multiple attributes with an object:
  ######################################################################################################
  # autopopulates :name, :email, with: ->(user) { OpenStruct.new(name: 'David', email: 'email@example.com') }
  ######################################################################################################


  ######################################################################################################
  # Using a lambda that populates multiple attributes with a hash:
  ######################################################################################################
  # autopopulates :name, :email, with: ->(user) { { name: 'David', email: 'email@example.com' } }
  ######################################################################################################


  ######################################################################################################
  # Using a callable that returns a single value:
  ######################################################################################################
  # autopopulates :email, with: ->(user) { 'email@example.com' }
  ######################################################################################################


  ######################################################################################################
  # Using a method with a custom name
  ######################################################################################################
  # autopopulates :name, with: :name_from_api

  # def name_from_api
  #   'David'
  # end
  ######################################################################################################


  ######################################################################################################
  # Using a method that matches the pattern `fetch_#{attr}`
  ######################################################################################################
  # autopopulates :name

  # def fetch_name
  #   'David'
  # end
  ######################################################################################################
end
